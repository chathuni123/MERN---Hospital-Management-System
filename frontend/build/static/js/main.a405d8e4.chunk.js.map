{"version":3,"sources":["Components/RegistrationForm.js","Screen/RegistrationScreen.js","Screen/Home.js","App.js","index.js"],"names":["RegistrationForm","useState","username","setUsername","email","setEmail","password","setPassword","confirmpassword","setConfirmPassword","role","setRole","error","setError","section","setSection","isLoading","setIsLoading","registerdoctor","a","postObject","axios","post","then","res","alert","localStorage","setItem","data","token","window","location","catch","err","registerlabchemist","registerpatient","console","log","registerapharmasist","className","Form","onSubmit","e","preventDefault","setTimeout","trim","length","Group","Label","as","column","sm","Col","style","fontSize","paddingLeft","Check","type","required","label","onClick","id","name","Spinner","animation","Button","variant","marginBottom","Row","md","controlId","Control","placeholder","value","onChange","target","Text","minLength","marginTop","RegistrationScreen","paddingTop","paddingBottom","span","Home","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a405d8e4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"./RegistrationForm.css\";\r\n\r\nconst RegistrationForm = () => {\r\n  \r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    \r\n    const [error, setError] = useState(\"\");\r\n    const [section, setSection] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n  \r\n    const registrationHandler = (e) => {\r\n      e.preventDefault();\r\n      setIsLoading(true);\r\n  \r\n      if (password !== confirmpassword) {\r\n        setPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n        setIsLoading(false);\r\n        return setError(\"Passwords do not match\");\r\n      } else if (\r\n        username.trim().length === 0 ||\r\n        email.trim().length === 0 ||\r\n        password.trim().length === 0\r\n      ) {\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n        setIsLoading(false);\r\n        return setError(\"Please fill all the fields\");\r\n      } else if (password.trim().length < 6) {\r\n        setTimeout(() => {\r\n          setError(\"\");\r\n        }, 5000);\r\n        setIsLoading(false);\r\n        return setError(\"Please use a password with at least 6 characters\");\r\n      }  else {\r\n        if (role === \"doctor\") {\r\n            registerdoctor();\r\n          }\r\n        if (role === \"labchemist\") {\r\n          registerlabchemist();\r\n        }\r\n        if (role === \"patient\") {\r\n          registerpatient();\r\n        }\r\n        if (role === \"pharmasist\") {\r\n            registerapharmasist();\r\n        }\r\n      }\r\n    };\r\n  \r\n    const registerdoctor = async () => {\r\n        let postObject = {\r\n          username,\r\n          email,\r\n          password,\r\n          \r\n        };\r\n        await axios\r\n          .post(\"http://localhost:6500/codebusters/api/auth/reg-doctor\", postObject)\r\n          .then((res) => {\r\n            setIsLoading(false);\r\n            alert(\"doctor registration Success\");\r\n            localStorage.setItem(\"authToken\", res.data.token);\r\n            localStorage.setItem(\"userRole\", \"doctor\");\r\n            window.location = `/`;\r\n          })\r\n          .catch((err) => {\r\n            setIsLoading(false);\r\n            alert(\"ERROR! \" + err);\r\n          });\r\n      };\r\n\r\n\r\n    const registerlabchemist = async () => {\r\n      let postObject = {\r\n        username,\r\n        email,\r\n        password,\r\n        \r\n      };\r\n      await axios\r\n        .post(\"http://localhost:6500/codebusters/api/auth/reg-labchemist\", postObject)\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          alert(\"labchemist registration Success\");\r\n          localStorage.setItem(\"authToken\", res.data.token);\r\n          localStorage.setItem(\"userRole\", \"labchemist\");\r\n          window.location = `/`;\r\n        })\r\n        .catch((err) => {\r\n          setIsLoading(false);\r\n          alert(\"ERROR! \" + err);\r\n        });\r\n    };\r\n  \r\n    const registerpatient = async () => {\r\n      let postObject = {\r\n        username,\r\n        email,\r\n        password,\r\n      };\r\n      await axios\r\n        .post(\r\n          \"http://localhost:6500/codebusters/api/auth/reg-patient\",\r\n          postObject\r\n        )\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          alert(\"patient registration Success\");\r\n          console.log(\"Done\");\r\n          localStorage.setItem(\"authToken\", res.data.token);\r\n          localStorage.setItem(\"userRole\", \"patient\");\r\n          window.location = `/`;\r\n        })\r\n        .catch((err) => {\r\n          setIsLoading(false);\r\n          alert(\"ERROR! \" + err);\r\n        });\r\n    };\r\n  \r\n   \r\n    const registerapharmasist = async () => {\r\n      setIsLoading(true);\r\n      let postObject = {\r\n        username,\r\n        email,\r\n        password,\r\n       \r\n      };\r\n      await axios\r\n        .post(\"http://localhost:6500/codebusters/api/auth/reg-pharmasist\", postObject)\r\n        .then((res) => {\r\n          setIsLoading(false);\r\n          alert(\"pharmasist registration Success\");\r\n          localStorage.setItem(\"authToken\", res.data.token);\r\n          localStorage.setItem(\"userRole\", \"pharmasist\");\r\n          window.location = `/`;\r\n        })\r\n        .catch((err) => {\r\n          setIsLoading(false);\r\n          alert(\"ERROR! \" + err);\r\n        });\r\n    };\r\n  \r\n    return (\r\n      <div className=\"reg-form-body\">\r\n        <p className=\"reg-top-title\">Registration</p>\r\n  \r\n        <Form onSubmit={registrationHandler}>\r\n          {error && <span className=\"error-message\">{error}</span>}\r\n          {section === 1 && (\r\n            <div>\r\n              <Form.Group>\r\n                <Form.Label as=\"legend\" column sm={12}>\r\n                  <h3>Register as:</h3>\r\n                </Form.Label>\r\n                <Col sm={12} style={{ fontSize: \"1.1rem\", paddingLeft: \"3vw\" }}>\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    required={true}\r\n                    label=\"Doctor\"\r\n                    onClick={() => {\r\n                      setIsLoading(true);\r\n                      setRole(\"doctor\");\r\n                      setTimeout(() => {\r\n                        setSection(2);\r\n                        setIsLoading(false);\r\n                      }, 1000);\r\n                    }}\r\n                    id=\"formHorizontalRadios1\"\r\n                    name=\"formHorizontalRadios\"\r\n                  />\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    required={true}\r\n                    label=\"Lab Chemist\"\r\n                    onClick={() => {\r\n                      setIsLoading(true);\r\n                      setRole(\"labchemist\");\r\n                      setTimeout(() => {\r\n                        setSection(2);\r\n                        setIsLoading(false);\r\n                      }, 1000);\r\n                    }}\r\n                    id=\"formHorizontalRadios2\"\r\n                    name=\"formHorizontalRadios\"\r\n                  />\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    required={true}\r\n                    label=\"patient\"\r\n                    onClick={() => {\r\n                      setIsLoading(true);\r\n                      setRole(\"patient\");\r\n                      setTimeout(() => {\r\n                        setSection(2);\r\n                        setIsLoading(true);\r\n                      }, 1000);\r\n                    }}\r\n                    id=\"formHorizontalRadios3\"\r\n                    name=\"formHorizontalRadios\"\r\n                  />\r\n                     <Form.Check\r\n                    type=\"radio\"\r\n                    required={true}\r\n                    label=\"Pharmasist\"\r\n                    onClick={() => {\r\n                      setIsLoading(true);\r\n                      setRole(\"pharmasist\");\r\n                      setTimeout(() => {\r\n                        setSection(2);\r\n                        setIsLoading(false);\r\n                      }, 1000);\r\n                    }}\r\n                    id=\"formHorizontalRadios3\"\r\n                    name=\"formHorizontalRadios\"\r\n                  />\r\n                </Col>\r\n              </Form.Group>\r\n              {isLoading && <Spinner animation=\"border\" />}\r\n            </div>\r\n          )}\r\n          {section === 2 && (\r\n            <div>\r\n              <Button\r\n                variant=\"warning\"\r\n                onClick={() => {\r\n                  setSection(1);\r\n                }}\r\n                style={{ marginBottom: \"2vh\" }}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Form.Row>\r\n                <Form.Group as={Col} md={6} controlId=\"username\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => {\r\n                      setUsername(e.target.value);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n  \r\n                <Form.Group as={Col} md={6} controlId=\"email\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We won't share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Form.Row>\r\n                <Form.Group as={Col} md={6} controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password with at least 6 characters\"\r\n                    minLength={6}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} md={6} controlId=\"confirmPassword\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={confirmpassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Button variant=\"outline-success\" type=\"submit\">Submit</Button>\r\n            {isLoading && (\r\n              <div style={{ marginTop: \"2vh\" }}>\r\n                <Spinner animation=\"border\" />\r\n              </div>\r\n            )}\r\n              \r\n            </div>\r\n          )}\r\n         \r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default RegistrationForm;","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport RegistrationForm from \"../Components/RegistrationForm\";\r\n\r\nconst RegistrationScreen = () => {\r\n  return (\r\n    <div style={{ paddingTop: \"5vh\", paddingBottom: \"5vh\" }}>\r\n        <Row>\r\n          <Col span={14}>\r\n            <RegistrationForm />\r\n          </Col>\r\n        \r\n        </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationScreen;","import React from \"react\";\r\nimport { Button } from 'antd';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div style={{ paddingTop: \"5vh\", paddingBottom: \"5vh\" }}>\r\n        <h1>HELLO HOW ARE YOU</h1>\r\n\r\n\r\n        <Button type=\"primary\">Primary Button</Button>    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as BRouter, Switch, Route } from \"react-router-dom\";\nimport RegistrationScreen from \"./Screen/RegistrationScreen\";\nimport Home from \"./Screen/Home\";\n\nconst App = () => {\n  return (\n    <BRouter>\n      <main className=\"page-body-content\">\n      \n        <Switch>\n          <Route exact path=\"/registration\" component={RegistrationScreen} />\n        </Switch>\n      \n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n     \n      </main>\n    </BRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}